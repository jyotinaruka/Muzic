{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jyotisingh/Desktop/CodingDojo/MERN/React/Muzic/client/src/component/FeaturedPlaylist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Spotify from './SpotifyAPI';\nimport { Container, Item, Segment, Button, Icon } from 'semantic-ui-react';\nimport Player from './Player';\n\nconst FeaturedPlaylist = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [play, setPlay] = useState(\"\");\n  useEffect(() => {\n    Spotify.browse(\"featured-playlists\").then(res => {\n      console.log(res.data);\n\n      if (res.data.playlists) {\n        console.log(res.data.playlists);\n        setResults(res.data.playlists.items);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [results.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Item.Group, {\n        divided: true,\n        children: results.map((playlist, index) => /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n            src: playlist.images ? playlist.images[0].url : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n              as: \"a\",\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cinema\",\n                children: playlist.owner.display_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Item.Description, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Item.Extra, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => setPlay(playlist.uri),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 49\n                }, this), \" Play\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      play: play\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FeaturedPlaylist, \"/+wVJaSKHUQU7BWaf+vmBA4n4hE=\");\n\n_c = FeaturedPlaylist;\nexport default FeaturedPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeaturedPlaylist\");","map":{"version":3,"sources":["/Users/jyotisingh/Desktop/CodingDojo/MERN/React/Muzic/client/src/component/FeaturedPlaylist.js"],"names":["React","useEffect","useState","Spotify","Container","Item","Segment","Button","Icon","Player","FeaturedPlaylist","results","setResults","play","setPlay","browse","then","res","console","log","data","playlists","items","length","map","playlist","index","images","url","name","owner","display_name","e","uri"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,IALJ,QAMO,mBANP;AAOA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,OAAO,CAACY,MAAR,CAAe,oBAAf,EACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,UAAIH,GAAG,CAACG,IAAJ,CAASC,SAAb,EAAwB;AACpBH,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,SAArB;AACAT,QAAAA,UAAU,CAACK,GAAG,CAACG,IAAJ,CAASC,SAAT,CAAmBC,KAApB,CAAV;AACH;AACJ,KAPL;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI,QAAC,SAAD;AAAA,eACMX,OAAO,CAACY,MAAR,KAAmB,CAAnB,gBAAuB;AAAA;AAAA;AAAA;AAAA,YAAvB,gBACE,QAAC,OAAD;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,OAAO,MAAnB;AAAA,kBAEQZ,OAAO,CAACa,GAAR,CAAY,CAACC,QAAD,EAAWC,KAAX,kBACR,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,GAAkBF,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAmBC,GAArC,GAA2C;AAA5D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,EAAE,EAAC,GAAhB;AAAA,wBAAqBH,QAAQ,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,qCACI;AAAM,gBAAA,SAAS,EAAC,QAAhB;AAAA,0BAA0BJ,QAAQ,CAACK,KAAT,CAAeC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI,QAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA,oBALJ,eAQI,QAAC,IAAD,CAAM,KAAN;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAGC,CAAD,IAAOlB,OAAO,CAACW,QAAQ,CAACQ,GAAV,CAA/B;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAWP,KAAX;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,eA4BI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEb;AAAd;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAhDD;;GAAMH,gB;;KAAAA,gB;AAkDN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Spotify from './SpotifyAPI'\nimport {\n    Container,\n    Item,\n    Segment,\n    Button,\n    Icon,\n} from 'semantic-ui-react'\nimport Player from './Player'\n\nconst FeaturedPlaylist = () => {\n    const [results, setResults] = useState([]);\n    const [play, setPlay] = useState(\"\");\n\n    useEffect(() => {\n        Spotify.browse(\"featured-playlists\")\n            .then(res => {\n                console.log(res.data);\n                if (res.data.playlists) {\n                    console.log(res.data.playlists)\n                    setResults(res.data.playlists.items);\n                }\n            })\n\n    }, [])\n\n    return (\n        <Container>\n            { results.length === 0 ? <div /> :\n                <Segment>\n                    <Item.Group divided>\n                        {\n                            results.map((playlist, index) =>\n                                <Item key={index}>\n                                    <Item.Image src={playlist.images ? playlist.images[0].url : ''} />\n                                    <Item.Content>\n                                        <Item.Header as='a'>{playlist.name}</Item.Header>\n                                        <Item.Meta >\n                                            <span className='cinema'>{playlist.owner.display_name}</span>\n                                        </Item.Meta>\n                                        <Item.Description>\n\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            <Button onClick={(e) => setPlay(playlist.uri)}>\n                                                <Icon name='play' /> Play</Button>\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            )\n                        }\n                    </Item.Group>\n\n                </Segment>\n            }\n            <Player play={play} />\n        </Container>\n    )\n}\n\nexport default FeaturedPlaylist\n"]},"metadata":{},"sourceType":"module"}