{"ast":null,"code":"import axios from 'axios';\nimport qs from 'querystring';\nconst api = {\n  baseUrl: 'https://api.spotify.com/v1',\n  authUrl: 'https://accounts.spotify.com/api/token',\n  clientId: '511ebfdb56ba444c9527695daf456101',\n  clientSecret: 'c520e531dd60446785f4a52b1dee4e91'\n}; // browse api\n\nconst browse = async path => {\n  // get auth token\n  const {\n    data: {\n      access_token: token\n    }\n  } = await axios.post(api.authUrl, qs.stringify({\n    'grant_type': 'client_credentials'\n  }), {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${btoa(`${api.clientId}:${api.clientSecret}`)}`\n    }\n  }); // use token in browse api\n\n  const res = await axios.get(`${api.baseUrl}/browse/${path}?locale=en_US`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res;\n}; // search api\n\n\nconst search = async q => {\n  // get auth token\n  const {\n    data: {\n      access_token: token\n    }\n  } = await axios.post(api.authUrl, qs.stringify({\n    'grant_type': 'client_credentials'\n  }), {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${btoa(`${api.clientId}:${api.clientSecret}`)}`\n    }\n  }); // use token in search api\n\n  const res = await axios.get(`${api.baseUrl}/search/?q=${q}&locale=en_US&market=US&type=track`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res;\n};\n\nconst Spotify = {\n  browse,\n  search\n};\nexport default Spotify;","map":{"version":3,"sources":["/Users/jyotisingh/Desktop/CodingDojo/MERN/React/Muzic/client/src/component/SpotifyAPI.js"],"names":["axios","qs","api","baseUrl","authUrl","clientId","clientSecret","browse","path","data","access_token","token","post","stringify","headers","Authorization","btoa","res","get","search","q","Spotify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,aAAf;AAIA,MAAMC,GAAG,GAAG;AACVC,EAAAA,OAAO,EAAE,4BADC;AAEVC,EAAAA,OAAO,EAAE,wCAFC;AAGVC,EAAAA,QAAQ,EAAE,kCAHA;AAIVC,EAAAA,YAAY,EAAE;AAJJ,CAAZ,C,CAOA;;AACA,MAAMC,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC7B;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAEC;AAAhB;AAAR,MAAoC,MAAMX,KAAK,CAACY,IAAN,CAC9CV,GAAG,CAACE,OAD0C,EAE9CH,EAAE,CAACY,SAAH,CAAa;AAAE,kBAAc;AAAhB,GAAb,CAF8C,EAG9C;AACEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEPC,MAAAA,aAAa,EAAG,SAAQC,IAAI,CAAE,GAAEd,GAAG,CAACG,QAAS,IAAGH,GAAG,CAACI,YAAa,EAArC,CAAwC;AAF7D;AADX,GAH8C,CAAhD,CAF6B,CAa7B;;AACA,QAAMW,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACf,GAAEhB,GAAG,CAACC,OAAQ,WAAUK,IAAK,eADd,EAEhB;AAAEM,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAjC;AAAX,GAFgB,CAAlB;AAKA,SAAOM,GAAP;AACD,CApBD,C,CAuBA;;;AACA,MAAME,MAAM,GAAG,MAAOC,CAAP,IAAa;AAC1B;AACA,QAAM;AAAEX,IAAAA,IAAI,EAAE;AAAEC,MAAAA,YAAY,EAAEC;AAAhB;AAAR,MAAoC,MAAMX,KAAK,CAACY,IAAN,CAC9CV,GAAG,CAACE,OAD0C,EAE9CH,EAAE,CAACY,SAAH,CAAa;AAAE,kBAAc;AAAhB,GAAb,CAF8C,EAG9C;AACEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,mCADT;AAEPC,MAAAA,aAAa,EAAG,SAAQC,IAAI,CAAE,GAAEd,GAAG,CAACG,QAAS,IAAGH,GAAG,CAACI,YAAa,EAArC,CAAwC;AAF7D;AADX,GAH8C,CAAhD,CAF0B,CAa1B;;AACA,QAAMW,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACf,GAAEhB,GAAG,CAACC,OAAQ,cAAaiB,CAAE,oCADd,EAEhB;AAAEN,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAjC;AAAX,GAFgB,CAAlB;AAKA,SAAOM,GAAP;AACD,CApBD;;AAsBA,MAAMI,OAAO,GAAG;AAAEd,EAAAA,MAAF;AAAUY,EAAAA;AAAV,CAAhB;AAEA,eAAeE,OAAf","sourcesContent":["import axios from 'axios';\nimport qs from 'querystring';\n\n\n\nconst api = {\n  baseUrl: 'https://api.spotify.com/v1',\n  authUrl: 'https://accounts.spotify.com/api/token',\n  clientId: '511ebfdb56ba444c9527695daf456101',\n  clientSecret: 'c520e531dd60446785f4a52b1dee4e91'\n}\n\n// browse api\nconst browse = async (path) => {\n  // get auth token\n  const { data: { access_token: token } } = await axios.post(\n    api.authUrl,\n    qs.stringify({ 'grant_type': 'client_credentials' }),\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${btoa(`${api.clientId}:${api.clientSecret}`)}`\n      }\n    }\n  );\n\n  // use token in browse api\n  const res = await axios.get(\n    `${api.baseUrl}/browse/${path}?locale=en_US`,\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n\n  return res;\n}\n\n\n// search api\nconst search = async (q) => {\n  // get auth token\n  const { data: { access_token: token } } = await axios.post(\n    api.authUrl,\n    qs.stringify({ 'grant_type': 'client_credentials' }),\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${btoa(`${api.clientId}:${api.clientSecret}`)}`\n      }\n    }\n  );\n\n  // use token in search api\n  const res = await axios.get(\n    `${api.baseUrl}/search/?q=${q}&locale=en_US&market=US&type=track`,\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n\n  return res;\n}\n\nconst Spotify = { browse, search }\n\nexport default Spotify "]},"metadata":{},"sourceType":"module"}