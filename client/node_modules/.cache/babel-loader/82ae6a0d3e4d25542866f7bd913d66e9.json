{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jyotisingh/Desktop/CodingDojo/MERN/React/Muzic/client/src/component/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport Spotify from '../component/SpotifyAPI';\nimport { Container, Item, Segment, Form, Button, Icon, Pagination } from 'semantic-ui-react';\nimport Player from './Player';\n\nconst SearchPage = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [play, setPlay] = useState(\"\");\n\n  const submitHandler = e => {\n    e.preventDefault();\n    Spotify.search(search).then(res => {\n      console.log(res.data);\n\n      if (res.data.tracks) {\n        setResults(res.data.tracks.items);\n      }\n    });\n  };\n\n  const searchHandler = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Segment, {\n      className: \"searchbar\",\n      size: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          inline: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            onChange: searchHandler,\n            value: search,\n            label: \"Search\",\n            placeholder: \"Search for track\",\n            icon: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => navigate('/searchsong'),\n            type: \"submit\",\n            primary: true,\n            children: \"Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), results.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 38\n    }, this) :\n    /*#__PURE__*/\n    //remove white space\n    _jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Item.Group, {\n        divided: true,\n        children: results.map((track, index) => /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n            src: track.album.images ? track.album.images[0].url : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n              as: \"a\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n              children: track.artists.map(artist => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cinema\",\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Item.Description, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Item.Extra, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => setPlay(track.uri),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 49\n                }, this), \" Play\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      play: play\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchPage, \"3x5vVRxZ2Y4iW/EZ2sAk0yCGyzs=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/jyotisingh/Desktop/CodingDojo/MERN/React/Muzic/client/src/component/SearchPage.js"],"names":["React","useState","navigate","Spotify","Container","Item","Segment","Form","Button","Icon","Pagination","Player","SearchPage","search","setSearch","results","setResults","play","setPlay","submitHandler","e","preventDefault","then","res","console","log","data","tracks","items","searchHandler","target","value","length","map","track","index","album","images","url","name","artists","artist","uri"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { navigate } from '@reach/router'\nimport Spotify from '../component/SpotifyAPI'\nimport {\n    Container,\n    Item,\n    Segment,\n    Form,\n    Button,\n    Icon,\n    Pagination,\n} from 'semantic-ui-react'\nimport Player from './Player'\n\nconst SearchPage = () => {\n    const [search, setSearch] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [play, setPlay] = useState(\"\");\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        Spotify.search(search)\n            .then(res => {\n                console.log(res.data);\n                if (res.data.tracks) {\n                    setResults(res.data.tracks.items);\n                }\n            })\n    }\n\n    const searchHandler = (e) => {\n        setSearch(e.target.value);\n    }\n\n    return (\n        <Container>\n            <Segment className=\"searchbar\" size='small'>\n                <Form onSubmit={submitHandler}>\n                    <Form.Group inline>\n                        <Form.Input onChange={searchHandler} value={search} label=\"Search\" placeholder='Search for track' icon='search' />\n                        <Button onClick={(e) => navigate('/searchsong')} type='submit' primary>Go</Button>\n                    </Form.Group>\n                </Form>\n            </Segment>\n            { results.length === 0 ? <div></div> : //remove white space\n                <Segment>\n                    <Item.Group divided>\n                        {\n                            results.map((track, index) =>\n                                <Item key={index}>\n                                    <Item.Image src={track.album.images ? track.album.images[0].url : ''} />\n                                    <Item.Content>\n                                        <Item.Header as='a' >{track.name}</Item.Header>\n                                        <Item.Meta >\n                                            {track.artists.map((artist) =>\n                                                <span className='cinema'>{artist.name}</span>\n                                            )}\n                                        </Item.Meta>\n                                        <Item.Description>\n\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            <Button onClick={(e) => setPlay(track.uri)}>\n                                                <Icon name='play' /> Play</Button>\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            )\n                        }\n                    </Item.Group>\n\n                </Segment>\n            }\n            <Player play={play} />\n        </Container>\n    )\n}\n\nexport default SearchPage"]},"metadata":{},"sourceType":"module"}