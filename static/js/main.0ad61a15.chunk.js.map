{"version":3,"sources":["component/PublicHome.js","component/SpotifyAPI.js","component/Player.js","component/SearchPage.js","muzicLogo-small.png","component/Navbar.js","component/NewReleases.js","component/FeaturedPlaylist.js","component/HandleAuth.js","App.js","reportWebVitals.js","index.js"],"names":["PublicHome","Container","textAlign","text","Header","as","content","inverted","style","fontSize","fontWeight","marginBottom","marginTop","Divider","hidden","Button","onClick","e","navigate","primary","size","Icon","name","api","getAppToken","a","tokenFromStore","localStorage","getItem","axios","post","qs","stringify","headers","Authorization","btoa","token","data","access_token","Spotify","browse","path","get","res","search","q","Player","play","className","src","width","height","frameborder","allowtransparency","allow","SearchPage","useState","setSearch","results","setResults","setPlay","Segment","Form","onSubmit","preventDefault","then","console","log","tracks","items","Group","inline","Input","onChange","target","value","label","placeholder","icon","type","length","Item","divided","map","track","index","Image","album","images","url","Content","Meta","artists","artist","Description","Extra","uri","Navbar","vertical","Menu","borderless","logo","position","Link","to","NewReleases","useEffect","albums","FeaturedPlaylist","playlists","playlist","owner","display_name","HandleAuth","location","useLocation","params","parse","error","code","setItem","lastURL","window","href","App","minHeight","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ad61a15.chunk.js","sourcesContent":["import React from 'react'\nimport { navigate } from '@reach/router'\n\nimport {\n    Button,\n    Container,\n    Divider,\n    Header,\n    Icon,\n} from 'semantic-ui-react'\n\nconst PublicHome = () => {\n\n    return (\n        <Container textAlign='center' text>\n            <Header as='h1' content='Bringing Happiness Through muzic' inverted\n                style={{\n                    fontSize: '3em',\n                    fontWeight: 'normal',\n                    marginBottom: 0,\n                    marginTop: '2em',\n                }}\n            />\n            <Divider hidden />\n            <Button onClick={(e) => navigate('/searchsong')} primary size='huge'>\n                Get Muzic\n                <Icon name='right arrow' />\n            </Button>\n        </Container>\n    )\n}\n\nexport default PublicHome\n","import axios from 'axios';\nimport qs from 'querystring';\n\n\nconst api = {\n  baseUrl: 'https://api.spotify.com/v1',\n  authUrl: 'https://accounts.spotify.com/api/token',\n  clientId: '511ebfdb56ba444c9527695daf456101',\n  clientSecret: 'c520e531dd60446785f4a52b1dee4e91'\n}\n\nconst getAppToken = async () => {\n  // check token in storage.\n  var tokenFromStore = localStorage.getItem(\"muzic-spotify-app-token\");\n  if (tokenFromStore) {\n    return tokenFromStore;\n  }\n\n  const { data: { access_token: token } } = await axios.post(\n    api.authUrl,\n    qs.stringify({ 'grant_type': 'client_credentials' }),\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${btoa(`${api.clientId}:${api.clientSecret}`)}`\n      }\n    }\n  );\n  return token;\n}\n\nconst getUserToken = async () => {\n  // 1. If we have token in store, use it\n  var tokenFromStore = localStorage.getItem(\"muzic-spotify-user-token\");\n  if (tokenFromStore) {\n    return tokenFromStore;\n  }\n\n  // 2. If we don't have token, then request auth token from spotify\n  const params = qs.stringify(\n    {\n      'client_id': api.clientId,\n      'response_type': 'code',\n      'redirect_uri': 'http://localhost:3000/handleauth',\n      'scope': ['user-read-private'],\n      //'state': '34fFs29kd09'\n    }\n  )\n\n  const authReqURL = `https://accounts.spotify.com/authorize?${params}`\n\n  const currentURL = window.location.href;\n  localStorage.setItem(\"muzic-last-url\", currentURL);\n\n  window.location.href = authReqURL;\n}\n\n// browse api\nconst browse = async (path) => {\n  // get auth token\n  const token = await getAppToken();\n\n  // use token in browse api\n  const res = await axios.get(\n    `${api.baseUrl}/browse/${path}?locale=en_US`,\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n  return res;\n}\n\n\n// search api\nconst search = async (q) => {\n  // get auth token\n  const token = await getAppToken();\n\n  // use token in search api\n  const res = await axios.get(\n    `${api.baseUrl}/search/?q=${q}&locale=en_US&market=US&type=track`,\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n\n  return res;\n}\n\nconst Spotify = { browse, search }\n\nexport default Spotify ","import React from 'react'\nimport { Container } from 'semantic-ui-react'\n\nconst Player = ({ play }) => {\n    return (\n        !play ? <div /> :\n            <div>\n                <div className=\"playerDivider\" />\n                <Container className=\"playerWrapper\">\n                    <iframe src={`https://embed.spotify.com/?uri=${play}`}\n                        width=\"100%\" height=\"80\" frameborder=\"0\"\n                        allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                </Container>\n            </div>\n    )\n}\n\nexport default Player\n","import React, { useState } from 'react'\nimport { navigate } from '@reach/router'\nimport Spotify from '../component/SpotifyAPI'\nimport {\n    Container,\n    Item,\n    Segment,\n    Form,\n    Button,\n    Icon,\n    Pagination,\n} from 'semantic-ui-react'\nimport Player from './Player'\n\nconst SearchPage = () => {\n    const [search, setSearch] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [play, setPlay] = useState(\"\");\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        Spotify.search(search)\n            .then(res => {\n                console.log(res.data);\n                if (res.data.tracks) {\n                    setResults(res.data.tracks.items);\n                }\n            })\n    }\n\n    const searchHandler = (e) => {\n        setSearch(e.target.value);\n    }\n\n    return (\n        <Container>\n            <Segment className=\"searchbar\" size='small'>\n                <Form onSubmit={submitHandler}>\n                    <Form.Group inline>\n                        <Form.Input onChange={searchHandler} value={search} label=\"Search\" placeholder='Search for track' icon='search' />\n                        <Button onClick={(e) => navigate('/searchsong')} type='submit' primary>Go</Button>\n                    </Form.Group>\n                </Form>\n            </Segment>\n            { results.length === 0 ? <div></div> : //remove white space\n                <Segment>\n                    <Item.Group divided>\n                        {\n                            results.map((track, index) =>\n                                <Item key={index}>\n                                    <Item.Image src={track.album.images ? track.album.images[0].url : ''} />\n                                    <Item.Content>\n                                        <Item.Header as='a' >{track.name}</Item.Header>\n                                        <Item.Meta >\n                                            {track.artists.map((artist) =>\n                                                <span className='cinema'>{artist.name}</span>\n                                            )}\n                                        </Item.Meta>\n                                        <Item.Description>\n\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            <Button onClick={(e) => setPlay(track.uri)}>\n                                                <Icon name='play' /> Play</Button>\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            )\n                        }\n                    </Item.Group>\n\n                </Segment>\n            }\n            <Player play={play} />\n        </Container>\n    )\n}\n\nexport default SearchPage","export default __webpack_public_path__ + \"static/media/muzicLogo-small.f494740b.png\";","import React from 'react'\nimport { Link, navigate } from '@reach/router'\nimport {\n    Container,\n\n    Icon,\n    Image,\n\n    Menu,\n    Segment,\n\n} from 'semantic-ui-react'\nimport logo from '../muzicLogo-small.png'\n\nconst Navbar = () => {\n    return (\n        <Segment className=\"bg\" vertical>\n            <Container>\n                <Menu className=\"bg\" borderless inverted size='massive'>\n                    <Menu.Item as='a' className=\"logo\">\n                        <Image className=\"logoSize\" onClick={(e) => navigate('/')} src={logo} size='medium' />\n                    </Menu.Item>\n                    <Menu.Menu position='right' className=\"bg\" icon='labeled' borderless>\n                        <Menu.Item as={Link} to=\"/newreleases\">\n                            <Icon name='music' />\n                            New Releases\n                        </Menu.Item>\n                        <Menu.Item as={Link} to=\"/featured\">\n                            <Icon name='th list' />\n                            Featured Playlists\n                        </Menu.Item>\n                        <Menu.Item as={Link} to=\"/searchsong\">\n                            <Icon name='search' />\n                            Search\n                        </Menu.Item>\n                    </Menu.Menu>\n                </Menu>\n            </Container>\n        </Segment>\n    )\n}\n\nexport default Navbar\n","import React, { useEffect, useState } from 'react'\nimport Spotify from './SpotifyAPI'\nimport {\n    Container,\n    Item,\n    Segment,\n    Button,\n    Icon,\n} from 'semantic-ui-react'\nimport Player from './Player'\n\nconst NewReleases = () => {\n    const [results, setResults] = useState([]);\n    const [play, setPlay] = useState(\"\");\n\n    useEffect(() => {\n        Spotify.browse(\"new-releases\")\n            .then(res => {\n                console.log(res.data);\n                if (res.data.albums) {\n                    console.log(res.data.albums)\n                    setResults(res.data.albums.items);\n                }\n            })\n\n    }, [])\n\n    return (\n        <Container>\n            { results.length === 0 ? <div /> :\n                <Segment>\n                    <Item.Group divided>\n                        {\n                            results.map((album, index) =>\n                                <Item key={index}>\n                                    <Item.Image src={album.images ? album.images[0].url : ''} />\n                                    <Item.Content>\n                                        <Item.Header as='a'>{album.name}</Item.Header>\n                                        <Item.Meta >\n                                            {album.artists.map((artist) =>\n                                                <span className='cinema'>{artist.name}</span>\n                                            )}\n                                        </Item.Meta>\n                                        <Item.Description>\n\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            <Button onClick={(e) => setPlay(album.uri)}>\n                                                <Icon name='play' /> Play</Button>\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            )\n                        }\n                    </Item.Group>\n\n                </Segment>\n            }\n            <Player play={play} />\n        </Container>\n    )\n}\n\nexport default NewReleases\n","import React, { useEffect, useState } from 'react'\nimport Spotify from './SpotifyAPI'\nimport {\n    Container,\n    Item,\n    Segment,\n    Button,\n    Icon,\n} from 'semantic-ui-react'\nimport Player from './Player'\n\nconst FeaturedPlaylist = () => {\n    const [results, setResults] = useState([]);\n    const [play, setPlay] = useState(\"\");\n\n    useEffect(() => {\n        Spotify.browse(\"featured-playlists\")\n            .then(res => {\n                console.log(res.data);\n                if (res.data.playlists) {\n                    console.log(res.data.playlists)\n                    setResults(res.data.playlists.items);\n                }\n            })\n\n    }, [])\n\n    return (\n        <Container>\n            { results.length === 0 ? <div /> :\n                <Segment>\n                    <Item.Group divided>\n                        {\n                            results.map((playlist, index) =>\n                                <Item key={index}>\n                                    <Item.Image src={playlist.images ? playlist.images[0].url : ''} />\n                                    <Item.Content>\n                                        <Item.Header as='a'>{playlist.name}</Item.Header>\n                                        <Item.Meta >\n                                            <span className='cinema'>{playlist.owner.display_name}</span>\n                                        </Item.Meta>\n                                        <Item.Description>\n\n                                        </Item.Description>\n                                        <Item.Extra>\n                                            <Button onClick={(e) => setPlay(playlist.uri)}>\n                                                <Icon name='play' /> Play</Button>\n                                        </Item.Extra>\n                                    </Item.Content>\n                                </Item>\n                            )\n                        }\n                    </Item.Group>\n\n                </Segment>\n            }\n            <Player play={play} />\n        </Container>\n    )\n}\n\nexport default FeaturedPlaylist\n","import { useLocation } from \"@reach/router\"\nimport { parse } from \"query-string\"\nimport { useEffect } from \"react\"\n\nconst HandleAuth = () => {\n    const location = useLocation()\n    const params = parse(location.search);\n\n    useEffect(() => {\n        if (params.error) {\n            console.log(params.error);\n        } else if (params.code) {\n            localStorage.setItem(\"muzic-spotify-user-token\", params.code);\n\n            var lastURL = localStorage.getItem(\"muzic-last-url\")\n            if (lastURL) {\n                window.location.href = lastURL;\n            } else {\n                window.location.href = \"http://localhost:3000/\";\n            }\n        }\n\n    }, [])\n\n    return (\n        <div>\n            Continue to Muzic\n        </div>\n    )\n}\n\nexport default HandleAuth\n","import './App.css';\nimport './bootstrap.css';\nimport './Muzic.css';\nimport { Router } from '@reach/router'\nimport PublicHome from './component/PublicHome';\nimport SearchPage from './component/SearchPage';\nimport Navbar from './component/Navbar';\nimport { Segment } from 'semantic-ui-react'\nimport NewReleases from './component/NewReleases';\nimport FeaturedPlaylist from './component/FeaturedPlaylist';\nimport HandleAuth from './component/HandleAuth';\n\n\nfunction App() {\n\n  return (\n    <div className=\"wrapper\">\n      <Navbar />\n      <Segment vertical className=\"bg\" style={{ minHeight: 400, padding: '0em' }} >\n        <Router>\n          <PublicHome path=\"/\" />\n          <SearchPage path=\"/searchsong\" />\n          <NewReleases path=\"/newreleases\" />\n          <FeaturedPlaylist path=\"/featured\" />\n          <HandleAuth path=\"/handleauth\" />\n        </Router>\n      </Segment>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}